begin;
-- migrate:up
GRANT execute on function extensions.uuid_generate_v4 to anon;
-- public.fabric_types definition
CREATE TABLE public.fabric_types (
    id bigint generated by default as identity,
    name text,
    des text,
    img jsonb,
    created_at timestamptz NULL,
    updated_at timestamptz NULL,
    PRIMARY KEY (id)
);
-- public.fabrics definition
CREATE TABLE public.fabrics (
    id bigint generated by default as identity,
    item_type bigint references public.fabric_types NOT NULL,
    item_no text,
    item_name text,
    item_weight text,
    item_price text,
    item_img jsonb,
    item_composition text,
    item_sample_avaliable text,
    wholesaler text,
    wholesaler_item_no text,
    wholesaler_item_weight text,
    created_at timestamptz NULL,
    updated_at timestamptz NULL,
    PRIMARY KEY (id)
);
CREATE TABLE public.users (
    id uuid NOT NULL DEFAULT extensions.uuid_generate_v4(),
    auth_id uuid references auth.users NULL,
    name text not NULL,
    phone text not NULL,
    company text not NULL,
    authorized boolean not NULL default 'false',
    wechat_uuid text NULL,
    created_at timestamptz NULL,
    updated_at timestamptz NULL,
    PRIMARY KEY (id)
);
GRANT All on All tables in schema public to webuser;
GRANT SELECT on All tables in schema public to anon;
GRANT INSERT on table public.users to anon;
CREATE or replace function public.client() returns boolean as $$
SELECT true
from public.users
WHERE id = uuid(current_setting('request.headers', true)::json->>'client')
    and authorized = true;
$$ language sql stable;
GRANT execute on function public.client to anon,
    webuser;
CREATE or replace function public.confirm_add_user() returns trigger as $$ begin new.authorized = false;
return new;
end;
$$ language plpgsql;
DROP trigger if exists confirm_user on public.users;
CREATE trigger confirm_user before
INSERT on public.users for each row execute procedure public.confirm_add_user();
GRANT execute on function public.confirm_add_user to anon;
ALTER table public.fabrics enable row level security;
CREATE policy only_client on public.fabrics for
SELECT using (
        public.client() = true
        or auth.role() = 'webuser'
    );
INSERT INTO public.fabric_types (name)
VALUES ('顺毛格子SG'),
    ('常规格子GZ'),
    ('花式纱H');
INSERT INTO public.fabrics (
        item_type,
        item_no,
        item_name,
        item_weight,
        item_price,
        item_img,
        item_composition,
        item_sample_avaliable,
        wholesaler,
        wholesaler_item_no,
        wholesaler_item_weight
    )
VALUES (
        '1',
        'SG08942',
        '黑咖灰线顺毛格',
        '650g/m',
        '12.5$',
        '{}',
        '100%羊毛',
        '20230402',
        '杭州生产',
        'HG9342',
        '650g/m'
    ),
    (
        '2',
        'SG08943',
        '黑咖灰线顺毛格',
        '650g/m',
        '12.5$',
        '{}',
        '100%羊毛',
        '20230402',
        '杭州生产',
        'HG9342',
        '650g/m'
    ),
    (
        '1',
        'SG08944',
        '黑咖灰线顺毛格',
        '650g/m',
        '12.5$',
        '{}',
        '100%羊毛',
        '20230402',
        '杭州生产',
        'HG9342',
        '650g/m'
    );
commit;